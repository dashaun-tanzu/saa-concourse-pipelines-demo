resource_types:
  - name: time
    type: registry-image
    source: { repository: concourse/time-resource }
resources:
  - name: ubuntu
    type: registry-image
    source:
      repository: ((docker-hub-username))/scpd-runner
      username: ((docker-hub-username))
      password: ((docker-hub-password))
  - name: periodic
    type: time
    source:
      interval: 12h
  - name: repo
    type: git
    source:
      uri: ((repo_clone_url))
      branch: main
      username: x-access-token
      password: ((github_token))
jobs:
  - name: detect-drift
    serial: true
    plan:
      - get: periodic
        trigger: true
      - get: repo
      - get: ubuntu
      - task: check-pull-requests
        image: ubuntu
        config:
          platform: linux
          inputs:
            - name: repo
          params:
            GITHUB_TOKEN: ((github_token))
            REPO_FULL_NAME: ((repo_full_name))
          run:
            path: bash
            args:
              - -lc
              - |
                set -Eeo pipefail
                echo "Checking for open pull requests in ${REPO_FULL_NAME}..."
                
                # Get open pull requests from GitHub API
                PR_RESPONSE=$(curl -s \
                  -H "Authorization: Bearer $GITHUB_TOKEN" \
                  -H "Accept: application/vnd.github.v3+json" \
                  "https://api.github.com/repos/${REPO_FULL_NAME}/pulls?state=open")
                
                # Check if there are any PRs
                PR_COUNT=$(echo "$PR_RESPONSE" | jq '. | length')
                
                if [ "$PR_COUNT" -eq 0 ]; then
                  echo "No open pull requests found."
                else
                  echo "Found $PR_COUNT open pull request(s):"
                  echo "=================================="
                
                  # Extract and display PR titles
                  echo "$PR_RESPONSE" | jq -r '.[] | "- PR #\(.number): \(.title)"'
                
                  echo "=================================="
                  echo "Pull request details:"
                  echo "$PR_RESPONSE" | jq -r '.[] | "PR #\(.number): \(.title)\n  Author: \(.user.login)\n  Created: \(.created_at)\n  URL: \(.html_url)\n"'
                fi
      - task: recipe-runner
        image: ubuntu
        config:
          platform: linux
          inputs:
            - name: repo
          params:
            GIT_TOKEN_FOR_PRS: ((github_token))
            REPO_FULL_NAME: ((repo_full_name))
            MAVEN_PASSWORD: ((maven_password))
            MAVEN_USERNAME: ((maven_username))
            SPRING_ADVISOR_MAPPING_CUSTOM_0_GIT_URI: https://github.com/dashaun-tanzu/advisor-mappings.git
            SPRING_ADVISOR_MAPPING_CUSTOM_0_GIT_PATH: .advisor/mappings/
          run:
            path: bash
            args:
              - -lc
              - |
                set -Eeo pipefail
                until curl -L -H "Authorization: Bearer MAVEN_PASSWORD" \
                  -o advisor-cli.tar \
                  -X GET https://packages.broadcom.com/artifactory/spring-enterprise/com/vmware/tanzu/spring/application-advisor-cli-linux/1.4.0/application-advisor-cli-linux-1.4.0.tar; do
                  echo "Retrying..."
                  sleep 1
                done
                tar -xf advisor-cli.tar
                mv cli-binary/advisor ./
                cd repo
                sed -i "s/MAVEN_USERNAME/$MAVEN_USERNAME/g" /root/.m2/settings.xml
                sed -i "s/MAVEN_PASSWORD/$MAVEN_PASSWORD/g" /root/.m2/settings.xml
                if [[ $(gh pr list --state open --json number | jq length) -eq 0 ]]; then
                  echo "No open PRs found"
                else
                  echo "Open PRs found - task successful"
                  exit 0
                fi
                
                source "$HOME/.sdkman/bin/sdkman-init.sh"
                if [[ -f ".sdkmanrc" ]]; then
                  sdk env install
                else
                  sdk install java 21.0.2-graalce
                  sdk default java 21.0.2-graalce
                fi
                cd ..
                chmod +x ./advisor
                install ./advisor /usr/local/bin
                cd repo
                advisor build-config get
                advisor upgrade-plan get
                advisor upgrade-plan apply --push
